services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    build:
      context: elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: es01
    hostname: es01
    ports:
      - ${ES_PORT:-9200}:9200
      - ${ES_INTERNAL_NODE_PORT:-9300}:9300
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m -Xlog:disable -Xlog:all=warning:stderr:utctime,level,tags -Xlog:gc=debug:stderr:utctime
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-}
      - LICENSE=${LICENSE:-basic}
      - CLUSTER_NAME=${CLUSTER_NAME:-docker-cluster}
      - DISCOVERY_TYPE=${DISCOVERY_TYPE:-single-node}
    networks:
      - elk
    volumes:
      - $PWD/elasticsearch/data:/usr/share/elasticsearch/data:Z
      - $PWD/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    mem_limit: ${ES_MEM_LIMIT}
    restart: unless-stopped
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s http://localhost:9200 | grep -q 'cluster_name'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    build:
      context: kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
    container_name: kibana
    hostname: kibana
    labels:
      co.elastic.logs/module: kibana
    volumes:
      - $PWD/kibana/data:/usr/share/kibana/data
      - $PWD/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - ${KIBANA_PORT:-5601}:5601
    environment:
      - KIBANA_PASSWORD=${KIBANA_PASSWORD}
      - ELASTICSEARCH_HOSTS=http://es01:${ES_PORT:-9200}
      - TELEMETRY_OPTIN=false # Disable telemetry
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    networks:
      - elk
    mem_limit: ${KB_MEM_LIMIT}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120
    depends_on:
      es01:
        condition: service_healthy

networks:
  elk:
    driver: bridge
